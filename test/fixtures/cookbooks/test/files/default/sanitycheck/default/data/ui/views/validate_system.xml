<view autoCancelInterval="90" isVisible="true" onunloadCancelJobs="true" template="dashboard.html">
  <label>Validate System</label>
  <module name="AccountBar" layoutPanel="appHeader" />
  
  <module name="Message" layoutPanel="messaging">
    <param name="filter">*</param>
    <param name="clearOnJobDispatch">False</param>
    <param name="maxSize">2</param>
  </module>
  <module name="Message" layoutPanel="messaging">
    <param name="filter">splunk.search</param>
    <param name="clearOnJobDispatch">True</param>
    <param name="maxSize">1</param>
  </module>
  <module name="FeedbackLinks" layoutPanel="viewHeader">
    <param name="section">validate</param>
    <param name="subSection">system</param>
  </module>
  <module name="BreadCrumb" layoutPanel="viewHeader">
    <param name="options">
      <list>
        <param name="view">home</param>
        <param name="label">Home</param>
      </list>
      <list>
        <param name="label">Validate my system</param>
      </list>
    </param>
  </module>
  

  <module name="StaticContentSample" layoutPanel="panel_row1_col1" autoRun="True">
    <param name="text">

<![CDATA[

<b>Checking for common problems in your Splunk server.</b>

<br/><br/>

Green means all clear; yellow and red are flagged for review.  
Green arrows to the right of each item allow you to drill down into details.

]]>




</param>
    
    <module name="HiddenSearch">
      <!--  using a disjunction and then a stats command to glue together the start and end events into a single row representing the job -->
      <!--  note the subsearch used to get the number of cores we're dealing with,  for the equation of -->
      <!--  splunk_concurrent_search_limit = 4*cores+4    -->
      <!-- NOTE:  -->
      <!--   i was exploring using this three way disjunction to catch searches that -->
      <!--   were cancelled and never got info=completed events -->
      <!-- ( index=_audit action=search info=granted OR info=completed search_id=*) OR 
            (index=_internal sourcetype="splunkd_access" POST /services/search/jobs ) 
            | rex "(?i)/services/search/jobs/(?P<controlled_id>[^/]+)/control" 
            | eval search_id=if(isnull(search_id),controlled_id,search_id)  -->

      <param name="search"><![CDATA[ index=_audit action=search ( info=granted OR info=completed) search_id=* | stats first(total_run_time) as run_time last(_time) as _time by search_id | concurrency duration=run_time | eval cores=[ search earliest=1 index=_internal sourcetype="splunkd"  log_level="INFO" component="loader" detected | rex "(?i)Detected (?P<cores>[^ ]+)" | rename cores as search | fields - _* | stats first(search) as search by splunk_server | stats sum(search) as search ] | eval max_concurrent_searches=(cores*4) + 4 | timechart perc95(concurrency) max(concurrency) first(max_concurrent_searches) as "max concurrent searches"   ]]></param>
      <param name="earliest">-24h</param>
      <module name="JobProgressIndicator" />
      <module name="HiddenPostProcess">
        <param name="search">rename max(concurrency) as max_concurrency "max concurrent searches" as system_max | sort - max_concurrency | strcat max_concurrency " out of a maximum of " system_max " concurrent searches" label | eval percentage=max_concurrency/system_max * 100 | rangemap field=percentage low=0-30 high 31-80 severe=80-10000000 default=low</param>
        <module name="SingleValue">
          <param name="field">label</param>
          <param name="classField">range</param>
        </module>
      </module>  
      <module name="SubmitButton">
        <module name="ViewRedirector">
          <param name="viewTarget">charting</param>
          <param name="popup">True</param>
        </module>
      </module>
      <module name="StaticContentSample">
        <param name="text">The splunk server will start to queue searches if the number of concurrent searches is greater than 4 * (numberOfCores + 1). This checks how close you have come to that limit recently.
	  Drilldown to see details.
	  <![CDATA[ <a target=_new href="http://www.splunk.com/wiki/Apps/discover/v1/validate_system#Max-Searches">Help</a> ]]>
	</param>
      </module>
    </module>


    <module name="HiddenSearch">
      <!--  using a disjunction and then a stats command to glue together the start and end events into a single row representing the job -->
      <param name="search"><![CDATA[ index=_audit action=search ( info=granted OR info=completed) | eval user=if(user="n/a", null, user) | stats last(user) as user first(total_run_time) as run_time last(_time) as _time first(scan_count) as scan_count by search_id | search scan_count>10 run_time>2 | eval eps=scan_count/run_time ]]></param>
      <param name="earliest">-24h</param>
      <module name="JobProgressIndicator" />
      <module name="HiddenPostProcess">
        <param name="search">stats avg(eps) as eps | eval eps = round(eps,2) | rangemap field=eps severe=0-200 high=201-400 low=401-100000 default=low</param>
        <module name="SingleValue">
          <param name="field">eps</param>
          <param name="afterLabel"> events per second retrieved off disk</param>
          <param name="classField">range</param>
        </module>
      </module>  
      <module name="HiddenSearch">
        <param name="search"><![CDATA[ index=_audit action=search ( info=granted OR info=completed) | eval user=if(user="n/a", null, user) | stats last(user) as user first(total_run_time) as run_time last(_time) as _time first(scan_count) as scan_count by search_id | search scan_count>10 run_time>2 | eval eps=scan_count/run_time | timechart avg(eps) by user ]]></param>
        <module name="SubmitButton">
          <module name="ViewRedirector">
            <param name="viewTarget">charting</param>
            <param name="popup">True</param>
          </module>
        </module>
      </module>
      <module name="StaticContentSample">
        <param name="text">Overly low disk scan rates can indicate either unusually heavy system load or inadequate hardware.
	  Drilldown to find problematic eps per user.
	  <![CDATA[ <a target=_new href="http://www.splunk.com/wiki/Apps/discover/v1/validate_system#EPS">Help</a> ]]>
	</param>
      </module>
      
    </module>




<!--
* Search foo | some_other_command something | search bar - should put bar into the first search clause
suggestion: look for filtering searches filtering on things that seem unaffected by previous searches.

* Search foo | timechart dc(bar) by clientip
o lots of irrelevant events are creeping into the first clause, so a lot of what's pulled off disk is just thrown away in the timechart. Adding a clientip="*" or a bar="*" can sometimes be the simple answer.
suggestion: warn if "by " or top or other well known operators that don't support NULL values, if the field is not referenced in the first search clause

* w1n=foo* fail="a valid field" | stats count by w1n | search fail="doesn't exist after stats"
* failz=123 winz=456 | stats count by failz winz | search failz<winz (won't work unless you use where, as search assumes win is a literal)
suggestion: punt. broken searches won't be saved to app

* executing long-running reporting searches in flashtimeline
suggestion: ?

-->
    <module name="HiddenSearch" layoutPanel="panel_row1_col1">
      <param name="search"><![CDATA[index=_audit action=search info=completed  scan_count>50 event_count>0 savedsearch_name=* NOT savedsearch_name=""|  stats max(scan_count) as scan_count, max(event_count) as event_count by savedsearch_name  |   eval percent_events_used = 100*event_count / scan_count | fields percent_events_used, scan_count, event_count, savedsearch_name | sort percent_events_used | head 1 | eval percent_events_used = round(percent_events_used,2) | rangemap field=percent_events_used low=50-100 elevated=30-49 high=5-30 severe=0-5 default=low]]></param>
      <module name="JobProgressIndicator" />
      <module name="SingleValue">
        <param name="field">percent_events_used</param>
        <param name="afterLabel"> percent of events pulled off disk that are actually used, for the worst offending savedsearch</param>
        <param name="classField">range</param>
      </module>
      <module name="HiddenSearch">
        <param name="search"><![CDATA[index=_audit action=search info=completed  scan_count>50 event_count>0 savedsearch_name=* NOT savedsearch_name=""|  stats max(scan_count) as scan_count, max(event_count) as event_count by savedsearch_name  |   eval percent_events_used = 100*event_count / scan_count | fields percent_events_used, scan_count, event_count, savedsearch_name | sort percent_events_used ]]></param>
        <module name="SubmitButton">
          <module name="ViewRedirector">
            <param name="viewTarget">flashtimeline</param>
            <param name="popup">True</param>
          </module>
        </module>
      </module>
      <module name="StaticContentSample">
        <param name="text">Searches that retrieve many items from disk, only to filter them out, are often less efficient than need be.   Drilldown to find the worst offenders.
	  	  <![CDATA[ <a target=_new href="http://www.splunk.com/wiki/Apps/discover/v1/validate_app#Scan-Ratio">Help</a> ]]>		  
	</param>
      </module>
    </module>

  


<!-- 
* An input created programmatically for every single file in their
  entire archive. I believe they got to 40k entries before splunk
  started crashing.
suggestion: warn if inputs.conf has more than 100(?) files.
-->
    <module name="HiddenSearch">
      <param name="search"><![CDATA[| entity data/inputs/monitor namespace=none | stats count | rangemap field=count low=0-19 elevated=20-39 high=40-100 severe=101-99999]]></param>
      <module name="JobProgressIndicator" />
      <module name="SingleValue">
        <param name="field">count</param>
        <param name="afterLabel"> individual files being monitored</param>
        <param name="classField">range</param>
      </module>
      <module name="HiddenSearch">
        <param name="search"><![CDATA[| entity data/inputs/monitor namespace=none]]></param>
        <module name="SubmitButton">
          <module name="ViewRedirector">
            <param name="viewTarget">flashtimeline</param>
            <param name="popup">True</param>
          </module>
        </module>
      </module>
      <module name="StaticContentSample">
        <param name="text">Specifying a large number of individual files to be monitored separately can lead to performace problems. Consider monitoring shared directories.
	  Drilldown to see file inputs.
	  <![CDATA[ <a target=_new href="http://www.splunk.com/wiki/Apps/discover/v1/validate_system#Many-Files">Help</a> ]]>
	</param>
      </module>
    </module>


  


<!--
BAD DATAMODELS
* Sourcetype abuse - splitting files into separate sourcetypes, using
  sourcetypes to distinguish the same format of appserver log from
  different apps.  detect sources that have more than one sourcetype
-->
    <module name="HiddenSearch">
      <!--  NOTE TO DAVID: Im putting a ' | head 100000 ' leash on this search because without it, it matches millions of events on my system, never 
            hits the count>1 terminating condition and so it runs for several minutes before i cancel it. 
              - ncm  
      -->
      
      <param name="search"><![CDATA[* | head 100000 | dedup sourcetype,source|  streamstats dc(sourcetype) as count by source | search count>1 | stats count | rangemap field=count low=0-0 severe=1-99999]]></param>
      <module name="JobProgressIndicator" />
      <module name="SingleValue">
        <param name="field">count</param>
        <param name="afterLabel"> sources with multiple-sourcetypes</param>
        <param name="classField">range</param>
      </module>
      <module name="HiddenSearch">
        <param name="search"><![CDATA[* | dedup source,sourcetype | stats values(sourcetype) dc(sourcetype) as count by source | search count > 1 | sort - count]]></param>
        <module name="SubmitButton">
          <module name="ViewRedirector">
            <param name="viewTarget">flashtimeline</param>
            <param name="popup">True</param>
          </module>
        </module>
      </module>
      <module name="StaticContentSample">
        <param name="text">When a single source has more than one sourcetype, it usually indicates a sources were not properly configured.
	  Drilldown to find problematic sources.
	  <![CDATA[ <a target=_new href="http://www.splunk.com/wiki/Apps/discover/v1/validate_system#Multiple-Sourcetypes">Help</a> ]]>
	</param>
      </module>
    </module>


<!--
SILLY FORWARDERS
* On your Splunk indexer, enable forwarding to itself.
   # want to try and get server's name with "entity server/settings" but
   # can't because subsearches aren't giving entity the right sessionKey!
   # bug filed.
-->
    <module name="HiddenSearch">
      <param name="search"><![CDATA[| entity data/outputs/tcp/group namespace=none| search servers=localhost OR servers=127.0.0.1 | stats count | eval selfforward=if(count>=1, "True.", "False.") | rangemap field=count default=severe low=0-0]]></param>
      <module name="JobProgressIndicator" />
      <module name="SingleValue">
        <param name="field">selfforward</param>
        <param name="afterLabel"> Is data on the server being forwarded to itself?</param>
        <param name="classField">range</param>
      </module>
      <module name="HiddenSearch">
        <param name="search"><![CDATA[ | entity data/outputs/tcp/group namespace=none| search servers=localhost OR servers=127.0.0.1]]></param>
        <module name="SubmitButton">
          <module name="ViewRedirector">
            <param name="viewTarget">flashtimeline</param>
            <param name="popup">True</param>
          </module>
        </module>
      </module>
      <module name="StaticContentSample">
        <param name="text">Splunk servers should not forward data to themselves.
	  Drilldown to find problematic settings.
	  <![CDATA[ <a target=_new href="http://www.splunk.com/wiki/Apps/discover/v1/validate_system#Self-Forwarding">Help</a> ]]>
	</param>
      </module>
    </module>
  </module>


</view>
